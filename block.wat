(module
    (import "wasi_unstable" "fd_write" (func $fd_write (param i32 i32 i32 i32) (result i32)))
    (import "wasi_unstable" "fd_read" (func $fd_read (param i32 i32 i32 i32) (result i32)))
    (import "wasi_unstable" "random_get" (func $random_get (param i32 i32) (result i32) ))
    (global $stdout i32 (i32.const 1))
    (global $iovecp i32 (i32.const 0))
    (global $iovecl i32 (i32.const 4))
    (global $out i32 (i32.const 8))
    (memory 1)
    (export "memory" (memory 0))
    (func $print (param $byte i32)
        (local $location i32)
        (local.set $location (i32.const 100))
        (i32.store (get_global $iovecp) (get_local $location))
        (i32.store (get_global $iovecl) (i32.const 1)) 
        (i32.store (get_local $location) (get_local $byte))
        (call $fd_write 
            (get_global $stdout) 
            (get_global $iovecp) 
            (get_global $iovecl)
            (get_global $out)
        )
        drop
    )
    (func $printRandomBit
        (local $location i32)
        (local $random_i32 i32)
        (local.set $location (i32.const 100))
        
        (call $random_get (get_local $location) (i32.const 1) )
        (local.set $random_i32 (i32.load (get_local $location)))
        (call $print_i (get_local $random_i32) )
        drop
    )
 
    (func $print_i (param $i i32)
        (call $printBit (i32.div_u (get_local $i) (i32.const 0x80)))
    )
    (func $printBit (param $bit i32)
        (call $print (i32.add (get_local $bit) (i32.const 0x30)))
    )
    ;; (func $print_i32 (param $i i32)
    ;;     (call $print (i32.add (get_local $bit) (i32.const 0x30)))
    ;; )

    (func $nth_bit (param $num i32) (param $by i32) (result i32)
        (local $mask i32)
        (local.set $mask (i32.rotl (i32.const 1) (local.get $by)))
        (local.set $mask (i32.and (local.get $mask) (local.get $num)))
        (i32.rotr (local.get $mask) (local.get $by) )
    )
    (func $print_binary (param $i i32)
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 31)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 30)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 29)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 28)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 27)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 26)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 25)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 24)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 23)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 22)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 21)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 20)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 19)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 18)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 17)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 16)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 15)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 14)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 13)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 12)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 11)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const 10)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  9)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  8)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  7)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  6)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  5)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  4)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  3)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  2)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  1)))
        (call $printBit ( call $nth_bit (local.get $i) (i32.const  0)))
    )
    (func $print_base_2 (param $x i32)
        (local $i i32)
        (local.set $i (i32.const 31))
        (loop $loop
            ;;(call $print_binary (local.get $i))
            ;;(call $print (i32.const 0x0A))
            ;;(call $print (i32.const 0x0A))
            (call $printBit ( call $nth_bit (local.get $x) (local.get $i) ))
            (local.set $i (i32.sub (local.get $i) (i32.const 1)))
            (br_if $loop (i32.le_s (i32.const 0) (local.get $i) ))
        )
    )


    (func $main (export "_start")
        (local $ran i32 )
        
        (call $random_get (get_global $iovecp) (i32.const 4) )
        (local.set $ran (i32.load (get_global $iovecp) ))
        ;;(call $random_get (get_global $iovecp) (i32.const 4) )
        (call $print_binary (local.get $ran) )
        (call $print (i32.const 0x0A))
        ;; (call $print (i32.const 0x0A))
        ;; (call $print_base_2 (i32.const 0xFF ) )
        ;; (call $print (i32.const 0x0A))
        (call $print_base_2 (local.get $ran) )
        ;; (call $print (i32.const 0x0A))
        ;; (call $print (i32.const 0x0A))
        ;; (call $print_base_2 (get_global $iovecp ) )
        ;; (call $print_i (i32.load  (get_global $iovecp) ))
        drop
    )
)